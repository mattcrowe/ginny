<?php namespace {{ model.bundle }}\Model;
/**
 * Generated by Ginny on {{ 'now'|date('m/d/Y h:i A') }}
 *
 * https://github.com/crowefoote/ginny
 */



use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Collection;
use DB, DateTime, Carbon;

class {{ model }} extends Model
{

    protected $table = '{{ model.table }}';

    protected $guarded = [];

    public static $rules = [

    {% for field in model.fields %}
        {% if field.name not in ['id'] %}
            {% if field.autoIncrement == false and field.required == true %}
                '{{ field }}' => 'required',
            {% endif %}
        {% endif %}
    {% endfor %}

    ];

    {% for relation in model.belongsTo %}
    public function {{ relation.variable }}()
    {
        return $this->belongsTo('{{ relation.parent.bundle }}\Model\{{ relation.parent }}', '{{ relation.keys('local') }}', '{{ relation.keys('parent') }}');
    }
    {% endfor %}

    {% for relation in model.belongsToMany %}
    public function {{ relation.variables }}()
    {
        return $this->belongsToMany('{{ relation.parent.bundle }}\Model\{{ relation.parent }}', '{{ relation.pivot.table }}', '{{ relation.keys('pivot_local') }}', '{{ relation.keys('pivot_parent') }}');
    }
    {% endfor %}

    {% for relation in model.hasOne %}
    public function {{ relation.variable }}()
    {
        return $this->hasOne('{{ relation.child.bundle }}\Model\{{ relation.child }}', '{{ relation.keys('foreign') }}', '{{ relation.keys('local') }}');
    }
    {% endfor %}

    {% for relation in model.hasMany %}
    public function {{ relation.variables }}()
    {
        return $this->hasMany('{{ relation.child.bundle }}\Model\{{ relation.child }}', '{{ relation.keys('foreign') }}', '{{ relation.keys('local') }}');
    }
    {% endfor %}

    public function __toString() {
        return $this->{{ model.titleField }};
    }

    public function getDates()
    {
        {% filter inline %}

        return [
            {% for field in model.fieldsByType('datetime') %}
            '{{ field }}',
            {% endfor %}
            'created_at', 'updated_at'
        ];

        {% endfilter %}

    }

}