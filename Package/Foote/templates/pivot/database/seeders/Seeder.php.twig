<?php
namespace {{ model.bundle.namespace }}\Seeder;

use DB;
use Illuminate\Database\Seeder;

/**
 * Class {{ model.bundle }}{{ model }}Seeder
 *
 * @package {{ bundle.namespace }}\Seeder
 */
class {{ model.bundle }}{{ model }}Seeder extends Seeder {

    public function run()
    {
    	DB::table('{{ model.table }}')->truncate();

{% set uniques = {
'email': 'email',
'user': 'userName',
'username': 'userName',
} %}

        {% set fakes = {
        'first_name': 'firstName',
        'mi': 'randomLetter',
        'last_name': 'lastName',
        'name': 'words(rand(1, 3), true)',
        'host': 'domainName',
        'url': 'domainName',
        'endpoint': 'url',
        'slug': 'word()',
        'salt': 'md5',
        'hash': 'md5',
        'token': 'md5',
        'pass': 'md5',
        'password': 'md5',
        'signature': 'md5',
        'secret': 'md5',
        'params': 'words(rand(3, 5), true)',
        'description': 'sentence()',
        'ip': 'ipv4',
        } %}

        {% if model.parent != false %}
            $owners = \{{ model.parent.bundle.namespace }}\Model\{{ model.parent }}::count();
        {% else %}
            $owners = 0;
        {% endif %}

$faker = \Faker\Factory::create();

foreach(range(1, $owners ? 5 * $owners : 5) as $index)
{
\{{ model.bundle.namespace }}\Model\{{ model }}::create([

{% for relation in model.belongsTo %}
    {{ "'%s' => ceil($index/5)," | format(relation.local_key) }}
{% endfor %}

            {% for field in model.dataFields %}

                {% filter inline %}

                {% if field.parent != false %}
                    {{ "'%s' => ceil($index/5)," | format(field.name) }}
                {% elseif uniques[field.name] is defined %}
                    {{ "'%s' => $faker->unique()->%s," | format(field.name, uniques[field.name]) }}
                {% elseif fakes[field.name] is defined %}
                    {{ "'%s' => $faker->%s," | format(field.name, fakes[field.name]) }}
                {% elseif field.relation == true and field.belongsTo is defined %}
                    {{ "'%s' => ceil($index/5)," | format(field.name) }}
                {% elseif field.name == 'data' %}
                    {{ "'%s' => json_encode(['id'=>1])," | format(field.name) }}
                {% elseif field.type == 'boolean' %}
                    {{ "'%s' => $faker->numberBetween(0, 1)," | format(field.name) }}
                {% elseif field.type == 'datetime' %}
                    {{ "'%s' => $faker->dateTimeBetween('-1 year', 'now')->format('Y-m-d H:i:s')," | format(field.name) }}
                {% elseif field.type == 'string' %}
                    {{ "'%s' => $faker->word()," | format(field.name) }}
                {% elseif field.type == 'text' %}
                    {{ "'%s' => implode(\"\\n\\n\", $faker->paragraphs(rand(1, 3)))," | format(field.name) }}
                {% else %}
                    {{ "'%s' => '111'," | format(field.name) }}
                {% endif %}

                {% endfilter %}

            {% endfor %}

]);
}

}

}